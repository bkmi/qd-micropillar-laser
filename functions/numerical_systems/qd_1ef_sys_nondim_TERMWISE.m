function [Edot, rhodot, ndot] = qd_1ef_sys_nondim_TERMWISE(E, Etau, rho, rhotau, n, ntau, ...
							    kappa_s, kappa_w, mu_s, mu_w, ...
							    epsi_ss, epsi_ww, epsi_sw, epsi_ws, ...
							    beta, J_p, eta, tau_r, S_in, V, ...
							    Z_QD, n_bg, tau_sp, T_2, A, ...
							    hbar_omega, epsi_tilda, J, ...
							    feed_phase, feed_ampli, tau_fb, ...
							    epsi0, hbar, e0, c0)
  % Returns the value of each equation as a row vector seperated into terms.
  % This one is a non-dimensionalized version, copied from qd_1ef_sys_nondim
  
  epsi_bg = n_bg^2;
  
  lambda = tau_sp;
  theta = sqrt((epsi_ss*epsi_tilda)^-1);
  phi = (S_in*tau_sp)^(-1);
  
  g = ((norm(mu_s)^2)*T_2/(2*hbar^2))*(1+(E.*conj(E))).^(-1);
  
  Edot = lambda*[(hbar_omega/(epsi0*epsi_bg))*(2*Z_QD/V)*g.*(2*rho-1).*E, ...
		  -kappa_s*E, ...
		  -kappa_s*(-feed_ampli*exp(-1.0i*feed_phase)*Etau),...
		  +(1/norm(theta)^2)*(beta*hbar_omega/(epsi0*epsi_bg))*(2*Z_QD/V)*(rho/tau_sp).*(E./(E.*conj(E)))];
  rhodot = lambda*[-norm(theta)^2*g.*(2*rho-1).*(E.*conj(E)), ...
		   -rho/tau_sp, ...
		   +phi*S_in*n.*(1-rho)]; 
  ndot = (lambda/phi)*[(eta/(e0*A))*(J-J_p),...
			-phi*((S_in*n).*((2*Z_QD/A)*(1-rho))),...
			-phi*(n/tau_r)];
  
end